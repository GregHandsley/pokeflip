services:
  web:
    build:
      context: .
      dockerfile: infra/docker/web.Dockerfile
    env_file: [.env]
    environment:
      # helps Vite file-watching inside Docker on macOS/WSL2
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./apps/web:/app
      - web-node_modules:/app/node_modules   
    ports:
      - "5173:5173"
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    env_file: [.env]
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_PUBLIC_ENDPOINT_URL=http://localhost:9000
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
    volumes:
      - ./apps/api:/app/apps/api
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - minio

  worker:
    build:
      context: .
      dockerfile: infra/docker/worker.Dockerfile
    env_file: [.env]
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
    volumes:
      - ./apps/worker:/app/apps/worker
      - ./apps/api:/app/apps/api
    depends_on:
      - db
      - redis
      - minio

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  minio-setup:              # <-- a normal service under "services"
    image: minio/mc:latest
    profiles: ["setup"]     # <-- profiles belongs to THIS service
    env_file: [.env]
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; do
        echo 'waiting for minio...'; sleep 2;
      done;
      mc mb -p local/${MINIO_BUCKET} || true;
      mc anonymous set download local/${MINIO_BUCKET} || true;
      echo 'MinIO bucket ensured';
      "


volumes:
  pgdata:
  minio-data:
  web-node_modules:
